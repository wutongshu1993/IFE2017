{"version":3,"sources":["vueObserve.js"],"names":[],"mappings":"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","file":"vueObserve-compiled.js","sourcesContent":["/**\r\n * Created by lh on 2017/3/8.\r\n */\r\nfunction Observer(data) {\r\n    this.data = data;\r\n    this.walk(data);\r\n    this.eventBus = new PubSub();\r\n}\r\nvar p = Observer.prototype;\r\np.walk = function (obj) {\r\n    var val;\r\n    for(var key in obj){\r\n\r\n        if(obj.hasOwnProperty(key)){\r\n            val = obj[key];\r\n            if(typeof val === 'object'){\r\n                new Observer(val);\r\n            }\r\n            this.convert(key, val);//依次给所有属性设置get和set函数。\r\n        }\r\n    }\r\n};\r\np.convert = function (key, val) {\r\n    var self = this;\r\n    Object.defineProperty(this.data, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: function () {\r\n            console.log(\"你访问了\"+ key);\r\n            return val;\r\n        },\r\n        set : function (newVal) {\r\n            console.log(\"你设置了\"+key+' = '+newVal );\r\n            if(newVal === val){return };\r\n            self.eventBus.emit(key, val, newVal);//执行函数\r\n            //这里需要依次向上进行触发\r\n\r\n            val = newVal;\r\n            if(typeof newVal === 'object'){\r\n                new Observer(newVal);//如果新设置的值为对象，为新对象绑定。\r\n            }\r\n        }\r\n    })\r\n};\r\np.$watch = function (attr, callback) {\r\n    var self = this;\r\n    console.log(attr);\r\n    if (typeof self.data[attr] === 'object') {\r\n        for (let key in self.data[attr]) {\r\n            // this.$watch(key, callback);\r\n            self.eventBus.on(key, callback);\r\n            // console.log(this.eventBus.handlers);\r\n        }\r\n    }\r\n\r\n    self.eventBus.on(attr, callback);\r\n\r\n\r\n}\r\nfunction PubSub() {\r\n    this.handlers = {};\r\n}\r\nPubSub.prototype = {\r\n    on : function (eventType, handler) {//注册监听事件\r\n        var self = this;\r\n        if(!(eventType in self.handlers)) {\r\n            self.handlers[eventType] = [];\r\n        }\r\n        self.handlers[eventType].push(handler);\r\n        return this;\r\n    },\r\n    emit : function (attr, val, newVal) {//执行已经注册的函数，函数在set的时候调用emit。在watch中进行绑定\r\n        var self = this;\r\n        if(self.handlers[attr]){\r\n            self.handlers[attr].forEach(function (item) {\r\n                item(val, newVal);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nvar app2 = new Observer({\r\n    university: 'bupt',\r\n    major: 'computer',\r\n    address:{\r\n        country: 'china',\r\n        city : 'chengdu'\r\n    }\r\n});\r\n\r\n\r\napp2.$watch('address', function(old, newaddress){\r\n    console.log('我的地址变了');\r\n});\r\n// app2.data.address = {country:'hk',city:'cd'};\r\napp2.data.address.city = 'dl';\r\n\r\n\r\n\r\n"]}